[{"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\index.js":"1","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\App.js":"2","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\reportWebVitals.js":"3","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\service\\api.js":"4","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\routes\\routes.js":"5","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentChoose\\Choose.js":"6","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentSelect\\Select.js":"7","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentHeader\\header.js":"8","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentHeader\\Header.js":"9","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentPanel\\Panel.js":"10","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Update\\Update.js":"11","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\Create.js":"12","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\ButtonCreate\\ButtonCreate.js":"13","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\NewCategory.js":"14","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\NewMonitorang.js":"15","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Alert\\Alert.js":"16","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\RegisterCategory.js":"17","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\RegisterMonitorang.js":"18"},{"size":284,"mtime":1612227807527,"results":"19","hashOfConfig":"20"},{"size":297,"mtime":1616906709724,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1612227807529,"results":"22","hashOfConfig":"20"},{"size":209,"mtime":1612227807532,"results":"23","hashOfConfig":"20"},{"size":727,"mtime":1616903765744,"results":"24","hashOfConfig":"20"},{"size":575,"mtime":1616216391865,"results":"25","hashOfConfig":"20"},{"size":1729,"mtime":1616456188579,"results":"26","hashOfConfig":"20"},{"size":218,"mtime":1614732284560,"results":"27","hashOfConfig":"20"},{"size":218,"mtime":1616024522314,"results":"28","hashOfConfig":"20"},{"size":1815,"mtime":1616904387900,"results":"29","hashOfConfig":"20"},{"size":3295,"mtime":1616968845352,"results":"30","hashOfConfig":"20"},{"size":1397,"mtime":1616969991813,"results":"31","hashOfConfig":"20"},{"size":324,"mtime":1616906091252,"results":"32","hashOfConfig":"20"},{"size":1187,"mtime":1617154826757,"results":"33","hashOfConfig":"20"},{"size":1929,"mtime":1617156183169,"results":"34","hashOfConfig":"20"},{"size":295,"mtime":1616968809700,"results":"35","hashOfConfig":"20"},{"size":1310,"mtime":1617154732065,"results":"36","hashOfConfig":"20"},{"size":1315,"mtime":1617156261095,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"amxsoi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\index.js",[],["76","77"],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\App.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\reportWebVitals.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\service\\api.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\routes\\routes.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentChoose\\Choose.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentSelect\\Select.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentHeader\\header.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentHeader\\Header.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\componentPanel\\Panel.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Update\\Update.js",["78"],"import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Update.css';\r\nimport api from '../../../service/api';\r\n// Component\r\nimport Alert from '../Alert/Alert';\r\n\r\nexport default function Update(props) {\r\n    const index = props.match.params._id;\r\n    const [newDescription, setNewDescription] = useState(['']);\r\n    const [categories, setCategories] = useState(['']);\r\n    const [isUpdatedSuccess, setIsUpdatedSuccess] = useState([]);\r\n\r\n    //load register, searching by parameter\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const { data } = await api.post('/selectone', { _id: index });\r\n                setNewDescription(data);\r\n            } catch (error) {\r\n                console.warn(error)\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    //load categories, from API /categories\r\n    useEffect(() => {\r\n        async function loadCategories() {\r\n            try {\r\n                const responseCategory = await api.get('/categories');\r\n                setCategories(responseCategory.data);\r\n            } catch (error) {\r\n                console.warn(error);\r\n            }\r\n        }\r\n\r\n        loadCategories();\r\n    }, []);\r\n\r\n\r\n    //Update API\r\n    async function executeUpdate(event) {\r\n\r\n        try {\r\n            const newValues = {\r\n                category: '',\r\n                description: ''\r\n            }\r\n            const { name, value } = event.target;\r\n            if (name === \"listCategories\") {\r\n                newValues.category = value;\r\n                await api.put(`/update/${index}`, { category: newValues.category });\r\n                // console.log(\"Category updated!\")\r\n                setIsUpdatedSuccess(\"Categoria foi atualizada com sucesso!\");\r\n            } else if (name === \"txtUpdate\") {\r\n                newValues.description = value;\r\n                await api.put(`/update/${index}`, { description: newValues.description });\r\n                // console.log(\"Description updated\");\r\n                setIsUpdatedSuccess(\"Descrição foi atualizada com sucesso!\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.warn(error)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"containerUpdate\">\r\n            <h4>Alteração de descrição</h4>\r\n            <p id=\"updateTip\">As informações são salvas automaticamente após clicar com o cursor em qualquer canto da tela.\r\n            <strong> Se atente na mensagem de sucesso ou falha.</strong>\r\n            </p>\r\n            <select name=\"listCategories\" className=\"list\" onChange={executeUpdate}>\r\n                <option defaultValue={newDescription.category}> {newDescription.category} </option>\r\n                {categories.map((values, index) => {\r\n                    return (\r\n                        <option key={index} value={values}>{values}</option>\r\n                    )\r\n                })}\r\n            </select> <br></br>\r\n            <textarea type=\"text\" name=\"txtUpdate\" defaultValue={newDescription.description} onBlur={executeUpdate} /> <br ></br>\r\n            {\r\n                isUpdatedSuccess.length === 0 ? '' : <Alert color=\"#82F266\" message={isUpdatedSuccess} />\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\Create.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\components\\ButtonCreate\\ButtonCreate.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\NewCategory.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\NewMonitorang.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Alert\\Alert.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\RegisterCategory.js",[],"C:\\Users\\ferra\\Documents\\github\\Frontend_CallcenterPG\\front_callcenterpg\\src\\pages\\Monitorang\\Create\\RegisterMonitorang.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":27,"column":8,"nodeType":"85","endLine":27,"endColumn":10,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [index]",{"range":"92","text":"93"},[868,870],"[index]"]